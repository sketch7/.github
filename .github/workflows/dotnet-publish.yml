name: Dotnet Library Build

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: dotnet version to use (defaults to 6.0.x)
        required: false
        type: string
        default: '6.0.x'
      publishable:
        description: Whether packages should be deployed to Nuget server
        type: boolean
        default: ${{ contains(fromJSON('["develop", "master", "workflow"]'), github.ref_name) || endsWith(github.ref_name, '.x')  }}
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Print environment versions
        run: |
          NPM_V=$(npm -v)
          echo npm version':' $NPM_V
          DOTNET_CLI_V=$(dotnet --version)
          echo dotnet cli version':' $DOTNET_CLI_V
          echo dotnet input version':' ${{ inputs.dotnet-version }}
          echo "::notice::dotnet cli version 2 $DOTNET_CLI_V"
          echo github ref_name: ${{ github.ref_name }}
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: true
          SKETCH7_NUGET_API_KEY: ${{secrets.NUGET_KEY}}

      - name: Build version
        id: version-builder
        if: inputs.publishable
        uses: sketch7/version-builder-action@main
        with:
          versionSuffix: "devx"

          # only for testing version
      # - name: Publish NuGet
      #   run: |
      #     npm run publish:dev
      - name: Print version
        run: echo "::notice::Package version ${{ steps.version-builder.outputs.version }}"

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test
        run: npm test

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: all-package
          retention-days: 1
          path: 
            /home/runner/work/**/bin/**/*

      - name: Print PUBLISH
        run: echo "Is publishable ${{ inputs.publishable }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: inputs.publishable
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          name: all-package # optional else it will download all artifacts.

      - name: Print version
        run: echo "::notice::Package version ${{ github.env.VERSION }}"
        
        # todo: publish instead
        
      # - name: Publish NuGet
      #   run: |
      #     npm run publish:dev