name: dotnet package build/publish

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: dotnet version to use (defaults to 6.0.x)
        required: false
        type: string
        default: "6.0.x"
      publishable:
        description: Determines whether packages should be published to Nuget
        type: boolean
        default: ${{ contains(fromJSON('["develop", "master", "workflow"]'), github.ref_name) || endsWith(github.ref_name, '.x')  }}
        required: false
      preid-branches:
        description: "Branches to be used for preid, as comma delimited to use for versioning e.g. 'master,develop'."
        type: string
        default: main,master,develop
        required: false
      source-url:
        description: Default nuget source url
        type: string
        default: "https://api.nuget.org/v3/index.json"
        required: false
    secrets:
      nuget-auth-token:
        description: Auth token for Nuget
        required: false
    outputs:
      version:
        description: "Version of the package"
        value: ${{ jobs.build.outputs.version }}

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NUGET_AUTH_TOKEN: ${{ secrets.nuget-auth-token || secrets.GITHUB_TOKEN }}
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Print environment versions
        run: |
          NPM_V=$(npm -v)
          echo npm version':' $NPM_V
          DOTNET_CLI_V=$(dotnet --version)
          echo dotnet input version':' ${{ inputs.dotnet-version }}
          echo "::notice::dotnet cli version $DOTNET_CLI_V"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          source-url: ${{ inputs.source-url }}
          cache: true
          cache-dependency-path: "**/packages.lock.json"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build version
        id: version-builder
        if: inputs.publishable
        uses: sketch7/version-builder-action@v1
        with:
          preid-branches: ${{ inputs.preid-branches }}
          # preid-branches: "master,workflow"
          # preid: "rc"

      - name: Set version envs
        if: inputs.publishable
        run: |
          echo "VERSION=${{ steps.version-builder.outputs.version }}" >> $GITHUB_ENV
          echo "ASSEMBLY_VERSION=${{ steps.version-builder.outputs.nonSemverVersion }}" >> $GITHUB_ENV

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test
        run: npm test

      - name: Pack
        if: inputs.publishable
        run: dotnet pack -p:PackageVersion=$VERSION -p:AssemblyVersion=$ASSEMBLY_VERSION -o ./artifacts -c release --include-symbols -p:SymbolPackageFormat=snupkg --no-build --no-restore

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v3
        if: inputs.publishable
        with:
          name: packages
          retention-days: 1
          path: artifacts
    outputs:
      version: ${{ steps.version-builder.outputs.version }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.build.outputs.version }}
    if: inputs.publishable
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          source-url: ${{ inputs.source-url }}

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          name: packages # optional else it will download all artifacts.

      - name: Publish
        run: dotnet nuget push "*.nupkg" -k $NUGET_AUTH_TOKEN -s ${{ inputs.source-url }} --skip-duplicate

      - name: Git tag
        run: |
          git tag $VERSION
          git push origin $VERSION
